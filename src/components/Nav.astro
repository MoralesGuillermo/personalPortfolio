---
// Astro utils
import { Icon } from "astro-icon/components"

// Nav bar data
import navData from "../data/navData.mjs"
import Link from "./Link.astro"
---


<nav aria-label="Navigation bar" class="fixed w-full z-99">
    <div class="flex justify-between items-center px-3 py-5 ">
        <a href="/" aria-label="Go Home">
            <Icon name="logo" width="60" height="40"/>
        </a>
        <div class="flex items-center border border-gray-500 rounded-full p-2 bg-stone-800/60 max-sm:hidden">
            <ul>
                {
                    navData.map((data) =>
                    <Link 
                        path={data.path} 
                        text={data.title}
                        styleClass="navlink"
                        isRounded={true}
                        isSelected={data.path === Astro.url.pathname}
                    />
                )
                }
            </ul>
        </div>
        <div>
            <Icon id="burger" name="grommet-icons:menu" width="60" height="40" aria-label="Menu" class="cursor-pointer sm:hidden"/>
        </div>
    </div>
    <div id="burger-menu" class="hidden flex flex-col justify-center md:hidden" data-hidden="true">
        {
            navData.map((data) => (
                <div class="border border-b bg-stone-50  text-2xl p-5 border-gray-300">
                    <a class="hover:text-primary" href={data.path}>{data.title}</a>
                </div>
            ))
        }
    </div>
</nav>


<style>
    .navlink {
        color: white;   
    }

    .navlink:hover{
        color: var(--color-primary)
    }

    .navlink .selected{
        background-color: hsla(var(--primary-hue), .70);
    }

    .navlink .selected:hover{
        color: white
    }
</style>

<script>
    // Responsive burger menu logic
    const body = document.querySelector("body");
    const burger = document.getElementById("burger");
    const responsiveMenu: HTMLElement = document.getElementById("burger-menu") ?? new HTMLElement();
    burger?.addEventListener("click", (event) => {
        if (responsiveMenu.dataset.hidden === "true"){
            responsiveMenu.classList.remove("hidden");
            responsiveMenu.dataset.hidden = "false"
        }else{
            responsiveMenu.classList.add("hidden");
            responsiveMenu.dataset.hidden = "true";
        }
    });

    // Add logic to close the burger menu if any place of the site is touched (unless is the burger menu or the nav options)
    body?.addEventListener("touchstart", (event) => {
        // Do not run the logic if the burger menu is pressed or if a nav menu option is pressed
        if (responsiveMenu.dataset.hidden !== "true" && event.target !== burger && !responsiveMenu?.contains(event.target as Node)){
            responsiveMenu.classList.add("hidden");
            responsiveMenu.dataset.hidden = "true"
        }
    })
</script>